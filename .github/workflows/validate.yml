name: validate
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  unit-tests:
    runs-on: macos-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Load Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Load AVD Cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd
      - name: Create AVD Snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.23.0
        with:
          api-level: 30
          arch: x86_64
          target: playstore
          profile: pixel_4
          force-avd-creation: false
          ram-size: 1536M
          disk-size: 800M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run Tests
        uses: ReactiveCircus/android-emulator-runner@v2.23.0
        with:
          api-level: 30
          arch: x86_64
          target: playstore
          profile: pixel_4
          ram-size: 1536M
          disk-size: 800M
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            ./gradlew :kotlin-audio:connectedCheck --stacktrace
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'kotlin-audio/build/outputs/androidTest-results/**/TEST-*.xml'
  build-sample:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build Sample App
        run: ./gradlew :kotlin-audio-sample:assembleDebug